----------2020-12-18----------

3d 포폴 따로 준비
할 줄 아는거 다 들어가기

2월초 80%

normalMap
u 방향 : Tangent (빨강)
v 방향 : Bi(+ 외적 먼저 한쪽이 이름) (초록)

픽셀 0 - 1
방향 -1 - 1
픽셀 -> 방향

1. 샘플링
2. 픽셀 -> 방향
3. TBN mul 픽셀방향

----------2020-12-17----------

normal map online

스펙큘러
1. 조명 반사 벡터(방향)
2. 카메라<-wPosition 벡터(방향)
3. 정구
shiness : 반사 원 크기, 값이 클 수록 좁아짐
Specular.A = shiness

Emissive
Emissive.A = 두께

smooth step 
계단 구조(포스터라이징)를 부드럽게

----------2020-12-15----------

거밍뽄 메쉬 오류
되는 모델로 시도

3d obb 충돌 외적 면 비교도 추가

Diffuse
1. diffuseMap (Albedo)
2. Lambert (NormalMap)

쉐이더의 * : 감쇄
A, D, S, E 내부 계산에선 감쇄
외부에선 가산연산

포폴에 할 줄 아는거 다 넣기
특히 물같은거

----------2020-12-14----------

D3D::GetDC()->Map(texture, 0, D3D11_MAP_READ, 0, &subResource);
2의 승수로 받기 때문에 넣을 때 크기가 다를 수 있음
RowPitch : 1줄, DepthPitch : 1장
https://gamedev.stackexchange.com/questions/44500/how-many-and-which-axes-to-use-for-3d-obb-collision-with-sat

----------2020-12-10----------

과제아닌 과제 (24일까지)
모델 3개(이왕 다른 모델)
콜라이더->좌클릭->흑백(흰모델)->디퓨즈
지면(그리드)->오른쪽버튼->(디퓨즈 적용된 물체)이동과머리위좌표

도전 
체력게이지100->이동(도착)할때마다 20씩 깍임->0이면 렌더x


쉐이더 통합 후 인스턴싱

인스턴싱
1. 1번의 드로우콜
2. 같은모델
3. 객체마다 다른 속성값

단원 게임알고리즘 -> 클라이언트
시험은 서면으로 해야해서 시험은 안 보지만 과제 평가는 함

----------2020-12-09----------

웬만한 2D -> 원근 투영x, 뒤에 가려짐x

3D -> 2D : Project
2D -> 3D : unProject

----------2020-12-04----------

uav를 srv로 넘길 수 있지만 texture buffer가 좋음
간단한 계산은 RawBuffer가 좋다.
structer Buffer

원격수업 최소 28일까지 연장

----------2020-12-04----------

interrupt : 렉 (잠깐 멈춤)

RawData : 가공 되지 않은 이진데이터

CS : 렌더링 파이프라인이 아님

----------2020-12-03----------

17일까지
1. 모델교체(다른 모델(mixamo), 텍스쳐까지 적용)
2. 특정 입력 -> 공격 모션, 점프모션(둘 중 하나)
3. 키보드로 이동(좌우만), shift : 달리기
4. 횡스크롤 시점(카메라 약간 밑으로 바라보게, 바닥은 그리드), 좌우 전환 시 turn 부드럽게 회전


포폴 대부분 구하기 쉬워서 와우모델로 함


함수 - 루틴
분할 정복

cpu - 스레드
버퍼를 스레드로 넘기면 터짐
크리티컬 섹션 -> mutex, semaphore
Deadlock : 병목현상 (cpu, mem 잠잠한데 멈춰있음 가능성 큼)

gpu - 스레드
IA - VS - RS - PS - OM
Stream out <- 안 씀
Havok -> KUDA(hlsl -> CS(계산용 셰이더)) -> 비트코인 채굴

----------2020-11-30----------

VB, IB -> IASet -> SRV -> vRam
<- UAV <-

cpu메모리 -> 버퍼 -> vRam(Gpu)

애니매트릭스 == ClipTransform

----------2020-11-26----------

온라인 강의 언리얼 추천
내일 휴강

----------2020-11-25----------

믹사모 다운로드
skin : with out skin
in Place : true (제자리)

프레임
키프레임 - 변화되는 포인트

----------2020-11-20----------

_Assets 다운로드

에니메이션 본과 메쉬 본이 다름
(메쉬는 중점(메쉬 본 거의 1대1), 에니메이션 관절)

----------2020-11-19----------

과제) 모델 애니메이션 들어가기 전까지 (안 하면 안 할 수록 쌓임)
orbit 카메라 구현
상자 -> 플레이어

orbit -> 구면 좌표계
플레이어를 바라보면서 회전
위아래 최대치 설정 (맨 위에서 뒤집어지면 안 됨)

휠로 -> 확대 축소

원래 카메라 지면 통과 안되지만 y값으로하기



서로 다른 모델프로그램 호환 안 됨
모델 프로그램에 불필요한 정보가 있어서 쳐내야함


모델 3요소
1. Bone -> 그려야될 위치 정보 (부모가 자식으로 전달 : FK -> forward kimeStics, IK : 자식이 부모로 전달)
ㄴ 1) 각 부위 Matrix
ㄴ 2) 부모자식 관계(tree)
2. Mesh
ㄴ 1) 1개의 Mesh를 구성하기 위해 다수의 MeshPart 구성 (서로 다른 질감을 사용 가능)
3. Material
ㄴ A 
ㄴ D 알베도 램버트 노멀맵 
ㄴ S 
ㄴ E

보기-> 다른창 -> 오류목록
콘스탄트 버퍼 구조체
	// 64바이트 위로 애매한건 아래로

----------2020-11-18----------

#콘스탄트 버퍼
  // 셋팅되는 스테이지 없음
콘스탄트 버퍼는 한 번에 보내줌
크기 보단 넘기는 횟수를 줄이는 것이 성능상 좋다.
float4의 배수만 넘길 수 있다.(16바이트)
틀리면 값이 깨짐

안에 있는 값이 1개라도 바뀌면 모두 업데이트됨
값이 안 바뀌면 업데이트 안 함

쉐이더 전역변수 선언은 시버퍼 선언됨(시버퍼 영역임)
원래 hlsl에서 뷰프로젝션 따로 못보내고 한 번에 보내야한다.


쉐이더 밀어주는 모든걸, 스테이지 셋팅 랜더로

// 컴퓨트 쉐이더 할 떄 권한 둘다 사용

댑스를 끄고 다시 키는 기능을 따로 만듬
Stencil 효과

안쪽으로 갈 수록 깊이가 깊다.

국비 원격수업 줌
HRD 어플 -> 마이서비스 -> 선생님의 신호받고 버튼클릭 -> 5번 연속
얼굴 보이게 스샷 찍어야함 (시간 내에 얼굴 없으면 조퇴 처리)

----------2020-11-17----------

스피어 눈여겨 보기 (구면좌표계 과제)

C:\Program Files (x86)\Microsoft DirectX SDK (June 2010)\Utilities\bin\x86
DxTex.exe -> 큐브맵 만드는 도구
ndc 정점 좌표가 곧 uv
uv 범위 -1 ~ 1 (전개도 펼쳐서 접으면 다시 돌아갈 수 있게)
https://docs.microsoft.com/en-us/windows/win32/direct3d9/cubic-environment-mapping

중간에 백버퍼 값을 가져올 수 있다.
그 걸로 다시 입히는 방식이 리플레션도 사용
cubeMap(.ddx) : 반사 굴절 하늘 할 떄 사용

잠깐 이터레이터로 바꿔주는 함수
#include<iterator>
stdext::checked_array_iterator<T*>(void*)

콘스탄트 버퍼 -> 큰 데이터를 매 프레임마다 보낼 떄 씀
최대 4096 byte


----------2020-11-16----------

과제)
산이 있으면 앞뒤로 긴큐브 산을 경사에 붙어서 다님 (땅노멀에 맞게)
앞쪽에 파뭍히는건 괜찮다.
빨간색으로 right축, 초록색으로 up축, 파란색으로 forword축 그리기

구 만들기
stack : 가로 자르기
slice : 세로 자르기

Raycast (D3DXIntersectTri) -> 반직선을 쏴서 삼각면과 충돌하면 true를 리턴

터레인위치 = (시작 * (1 - 위비율) + (위 - 시작) * 위비율) + (시작 * (1 - 오비율) + (오 - 시작) * 오비율)
ddx + ddz가 1이 초과하면 다른 삼각형으로 다시 계산

----------2020-11-13----------

과제x 취소)
터레인 기다란큐브 -> 산 따라 다님


현업에서는 지형 텍스쳐 최소 8개
겹겹이 껴있는거 : 레이어맵
기본 맵 : BaseMap

Half Lambert
알베도 : 순수 디퓨즈상태

Material
Ambient : 주변 색깔 (수식 : N * -L)
Diffuse : 난반사
Specular : 정(타원)반사광
Emissive : 외각선

월요일 가방 가져오기
Terrain 다운로드

----------2020-11-12----------

- Terrain -
heightMap 가로세로 길이 하나 뺀 값
위 아래 뒤집혀짐(uv왼쪽위 시작, 버택스 왼쪽 아래 시작)

Diffuse
음영

외적 시계방향으로 (cull 할지도 이런식으로)
노멀 계산 시 정점에 면 2개 일 경우 -> 평균으로 만듬 

- Texture Sampler -

// Sampling 기법
AA : 안티언레이싱
대각선 처리기법 : SMAA FXAA

// Address mode
uvw가 1초과시 어떻게 처리할 건지

// FILTER (그림자에 사용)
POINT -> 주변색 복사
LINEAR -> 주변색 중간값

//c++ 에서 SamplerState 생성
ID3D11SamplerState*
D3D11_SAMPLER_DESC <- 옵션 넣기
D3D::GetDevice()->CreateSamplerState();

//쉐이더로 넘기기
AsSampler("")->SetSampler(0, ID3D11SamplerState*)

----------2020-11-11----------

컨테이너(텍스쳐) -> 셰이더 리소스 뷰
SRV -> Texture2D

uv (texCoord)
좌상 0, 0
우하 1, 1

Ctrl + Alt + 'A' -> 명령창
>of Framework\Renders\Context.cpp
그 파일로 이동

notepad++ 컴페어기능

----------2020-11-10----------

과제)
원(20각형) -> 면
인덱스 버퍼
면마다 알록 달록 색깔 넣기
가운데만 빨간색
(VertexId)


정점 줄이기 위한 인덱스 버퍼
인덱스 버퍼 -> 그리기순서
D3DXMatrixLookAtLH -> 룩엣

// 왼손 좌표계 메트릭스
xaxis.x	yaxis.x	zaxis.x -> *Normal(1, 0, 0)
xaxis.y	yaxis.y	zaxis.y -> *Normal(0, 1, 0)
xaxis.z	yaxis.z	zaxis.z -> *Normal(0, 0, 1)

// 바뀐 방향에 대한 위치 재설정 (axis는 단위벡터)
x : -dot(xaxis, old)
y : -dot(yaxis, old)
z : -dot(zaxis, old)

----------2020-11-09----------

(Time)클래스 수정

진짜 과제) 조사 과제 -> 과제 게시판 안 올려도 됨
	D3DXVec3TransformCoord;
	D3DXVec3TransformNormal;  
	D3DXMatrixInverse;
간략하게 조사


과제 취소)
10개 사각형 (칼라+위치+스케일 랜덤) 생성 ->
임구이 인덱스 선택 -> 키보드 -> 이동


화면 안쪽으로 갈 수로 z값이 증가 (왼손 좌표계)

World 4번째 0 -> 스케일 나누기 = 노멀라이즈

물체 하나하나 공간 : World
전체 공간 : Global Space
View -> 위치, 방향
Projection -> 시야의 크기(+ 시야각 FOV)

ShaderCompler
영상 보고 설정 연습
외부 도구 추가

Shader
	if (Path::GetExtension(file) == L"fx")
	else if (Path::GetExtension(file) == L"fxo")

	//RectDemo
	Performance : 성능 측정
	Performance performence;
	performence.Start();

	shader = new Material(Shader::Load(L"03_Rect.fxo"));

	float t = performence.End();
	wstring str = to_wstring(t);
	MessageBox(D3D::GetDesc().Handle, str.c_str(), L"", MB_OK);


쉐이더 컴파일 결과 -> .fxo
2번째 컴파일 부터 느리지 않음

Ctrl + R에서 args 값 넣을 수 있음

공부
C:\Program Files (x86)\Microsoft DirectX SDK (June 2010)\Samples

쉐이더 컴파일러 : fxc.exe

RasterizerState 옵션찾기 ->
D3D11_RASTERIZER_DESC 입력 -> F12

뒤에 1 붙은건 11.1버전이란 뜻
// c++ 에서 RasterizerState 만들기
ID3D11RasterizerState* rss;
D3D11_RASTERIZER_DESC desc;
D3D::GetDevice()->CreateRasterizerState(&desc, &rss);

//쉐이더로 넘기기
shader->GetShader()->AsRasterizer("RS")->SetRasterizerState(0, rss);
{추가로 뭔가 더 해야함}


----------2020-11-06----------

// 과제
// 라인 스트립으로 20각형 만들기

// 칸아카데미
// 코스 -> 삼각법 
// 선형대수학 -> 정규직교기저와 그람 슈미트 과정


// Input Assemble
// Subresource -> (Buffer) -> GPU
// Resource - 1. Buffer, 2.

// 구간
// CPU : Device 
// IA : Device Context

// VS
// 버퍼에서 받으면 멀티 스레드에서 정점마다 각각 따로 돔

// RS
// input -> output
// 정점을 픽셀로 바꾸고
// SV 붙은 놈들 선형보간 시킴
// 픽셀 하나하나 당 멀티스레드로 실행

// PS
// 무슨색을 칠할 지 결정하는 것이 픽셀쉐이더(PS)
// SV_Target0 -> 0번 렌더 타겟으로 그린다


// 쉐이더 클레스
// vsSet, psSet하는 함수있음
//vsBlob 컴파일결과

#권한
//desc.Usage = 
//D3D11_USAGE_DEFAULT; // GPU Update SubResourse
//D3D11_USAGE_DYNAMIC; // CPU Map + CPU플래그
//D3D11_USAGE_IMMUTABLE; // 수정불가


// ID3D11InputLayout
struct VertexInput
{
    // D3D11_INPUT_ELEMENT_DESC
    // 뒤에 시멘틱 이름을 보고 찾아감
    // "Position", 0
    // DXGI_FORMAT_R32G32B32_FLOAT
    
    // Position <- POSITION0 : 맵핑
    float4 Position : Position0;
    
    // D3D11_INPUT_ELEMENT_DESC
    // offset : 12
    //float4 Color : Color0;
};

UNor 
음수 없는 정규화(0~1)

NDC 
노말라이즈 좌표체계(-1~1)

